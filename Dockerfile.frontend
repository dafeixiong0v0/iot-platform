# Dockerfile.frontend (Vue.js 前端应用的 Dockerfile 占位符)
# 第一阶段：构建前端资源
FROM node:18-alpine AS build-stage

WORKDIR /app

# 复制 package.json 和 package-lock.json (或 yarn.lock)
COPY frontend/package*.json ./frontend/
# COPY frontend/yarn.lock ./frontend/ # 如果使用 yarn

# 进入 frontend 目录并安装依赖
RUN cd frontend && npm install
# RUN cd frontend && yarn install # 如果使用 yarn

# 复制整个 frontend 项目代码
COPY frontend/ ./frontend/

# 构建生产版本的应用
RUN cd frontend && npm run build

# 第二阶段：服务前端静态文件 (使用 Nginx)
FROM nginx:stable-alpine

# 将构建好的前端资源从 build-stage 复制到 Nginx 的静态文件目录
COPY --from=build-stage /app/frontend/dist /usr/share/nginx/html

# （可选）复制自定义的 Nginx 配置文件
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# 暴露 Nginx 默认端口
EXPOSE 80

# 容器启动时运行 Nginx
CMD ["nginx", "-g", "daemon off;"]

# 添加中文注释:
# 这个 Dockerfile 用于构建 Vue.js 前端应用的 Docker 镜像。
# 它首先使用 Node.js 环境构建静态资源，然后使用 Nginx 来服务这些静态文件。
# 确保 'frontend/package*.json' 和 'frontend/' 的路径相对于 Dockerfile 的上下文正确。
# 如果有自定义的 Nginx 配置 (例如为了SPA路由)，需要创建并复制 nginx.conf 文件。
