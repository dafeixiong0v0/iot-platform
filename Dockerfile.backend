# Dockerfile.backend (Node.js 后端应用的 Dockerfile 占位符)
# 选择一个官方的 Node.js 运行时作为父镜像
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /usr/src/app

# 复制 package.json 和 package-lock.json (如果可用)
COPY package*.json ./

# 安装项目依赖
RUN npm install

# 复制项目文件和文件夹到工作目录
COPY . .

# (如果需要构建步骤，例如 TypeScript 转译，可以在这里添加)
# RUN npm run build 

# 生产环境镜像
FROM node:18-alpine

WORKDIR /usr/src/app

# 从 builder 阶段复制 node_modules
COPY --from=builder /usr/src/app/node_modules ./node_modules
# 复制应用代码
COPY --from=builder /usr/src/app/src ./src
COPY --from=builder /usr/src/app/package.json ./package.json
# (如果之前有build步骤，复制构建产物)
# COPY --from=builder /usr/src/app/dist ./dist


# 应用程序监听的端口
EXPOSE 3000

# 定义容器启动时运行的命令
# CMD [ "node", "src/server.js" ]
CMD [ "npm", "start" ] # 假设 package.json 中有 "start": "node src/server.js"

# 添加中文注释:
# 这个 Dockerfile 用于构建 Node.js 后端应用的 Docker 镜像。
# 它使用了多阶段构建来减小最终镜像的体积。
# 确保在实际使用前，根据项目具体需求调整构建步骤和依赖。
